[tool.poetry]
name = "game-rating-service"
version = "0.1.0"
description = "Сервис для управления рейтингами игроков и игр"
readme = "README.md"  # Если есть README
packages = [{include = "src"}]  # Указываем, что код в src/

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.12"
uvicorn = "^0.34.0"
sqlalchemy = "^2.0.40"
asyncpg = "^0.30.0"
alembic = "^1.15.2"
dynaconf = "^3.2.10"
confluent-kafka = "^2.9.0"
pydantic = "^2.11.3"
avro = "^1.12.0"
greenlet = "^3.1.1"
mako = "^1.3.10"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-cov = "^6.1.1"
coverage = "^7.8.0"
mypy = "^1.15.0"
ruff = "^0.11.5"
bandit = "^1.7.8"
testcontainers = {extras = ["postgres"], version = "^4.10.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "/alembic"
]

[tool.coverage.report]
fail_under = 60
exclude_lines = [
    "pragma: no cover",
    "^\\s*if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "B", "Q", "TCH", "SIM", "ERA"]
ignore = ["D"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.bandit]
exclude_dirs = ["tests", "alembic"]
skips = ["B311"]  # Standard pseudo-random generators are not suitable for security/cryptographic purposes
